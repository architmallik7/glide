exec {
    commandLine "git", "submodule", "update", "--init", "--recursive"
    ignoreExitValue true
}
include ':library'
include ':library:pmd'
include ':library:test'
include ':instrumentation'
include ':annotation'
include ':annotation:compiler'
include ':annotation:compiler:test'
include ':benchmark'
include ':glide'
include ':third_party:gif_decoder'
include ':third_party:disklrucache'
include ':samples:flickr'
include ':samples:giphy'
include ':samples:svg'
include ':samples:gallery'
include ':samples:contacturi'
include ':samples:imgur'
include ':integration'
include ':integration:concurrent'
include ':integration:cronet'
include ':integration:gifencoder'
include ':integration:okhttp'
include ':integration:okhttp3'
include ':integration:recyclerview'
include ':integration:volley'
include ':testutil'
include ':mocks'

rootProject.name = 'glide-parent'

// Import the build cache plugin
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.harness:gradle-cache:0.0.2'
    }
}

// Apply the build cache plugin
apply plugin: 'io.harness.gradle-cache'

// Build cache config
buildCache {
    local {
        // Local build cache is dangerous as it might produce inconsistent results
        // in case developer modifies files while the build is running
        enabled = false
    }
    remote(io.harness.Cache) {
        accountId = System.getenv('HARNESS_ACCOUNT_ID') // accountId should be populated in CI pipeline
        token = System.getenv('HARNESS_PAT')            // API token with account admin (or edit) permissions
        push = "true"
        endpoint = System.getenv('HARNESS_CACHE_SERVICE_ENDPOINT') // https://app.harness.io/gateway/cache-service
    }
}
